extends ../../_layouts/default.pug
include ../../_mixins/detail-share.pug

block content
  .landing.directory-landing
    +landingHeader(pageSettings)
    .container
      +shareLink(shareSettings.label, shareSettings.shareLinks)
      #landingPageApp.landing--content
        +richTextIntro(pageSettings)
        +searchbar(pageSettings)
        +sortBar(pageSettings)
        +filterBar(pageSettings, filterOptions)
        .landing--search-results-sections
          +people(pageSettings)
    
block scripts
  script( type="text/javascript" ).
    var serverData = !{json}
  script(type="text/javascript")
    include app.vue.js
  +shareLinkApp()
  
mixin landingHeader(settings)
  - var headerStyle = settings.backgroundImage && settings.backgroundImage.url ? `background-image: url(${settings.backgroundImage.url})` : ''
  header.landing--header( style=headerStyle )
    .container.landing--header-container
      h1.landing--header-title=settings.pageTitle
      if settings.showSubscribe && settings.subscribeLabel && settings.subscribeLink
        a.landing--header-button( href=settings.subscribeLink )=settings.subscribeLabel

mixin richTextIntro(settings)
  if settings.intro && settings.intro.html
    .landing--rich-text-intro!=settings.intro.html

mixin searchbar(settings)
  - var placeholder = settings.searchPlaceholder ? settings.searchPlaceholder : ''
  .landing--search-bar
    input.landing--search-input( v-model="query" v-on:keyup.enter="queryUpdated()" type="search" placeholder=placeholder )
    button.landing--search-button( v-on:click="queryUpdated()" )
      i.landing--search-icon.fa.fa-search

mixin sortBar(settings)
  - var label = settings.lastNameLabel
  .landing--sort-bar
    p.landing--sort-bar-label=settings.sortByLabel
    button.landing--sort-bar-button(
      v-on:click="sortUpdated()"
    )
      span(
        v-html=`descending ? '${label} (Descending)' : '${label} (Ascending)'`
      )=`${label} (Ascending)`
      i.landing--sort-bar-button-icon.fa(
        v-bind:class="{ 'fa-caret-down' : descending, 'fa-caret-up' : ascending }"
      )

mixin filterBar(settings, filtersOptions)
  if filterOptions && filterOptions.length > 0
    .landing--filter-bar
      label.landing--filter-label=(settings.filterByLabel || 'Filter by:')
      each filterOption in filtersOptions
        .landing--filter-select-container
          select.landing--filter-select(
            v-model=`filters['${filterOption.label}']`
            v-on:change=`filterUpdated('${filterOption.label}')`
          )
            option( value="" selected="selected" disabled="disabled" )=filterOption.label
            if filterOption.options && filterOption.options.length > 0
              each option in filterOption.options
                option( value=JSON.stringify(option) )=option.label
          i.landing--filter-select-icon.fa.fa-chevron-down
  +activeFilterBar(settings)

mixin activeFilterBar(settings)
  .landing--active-filter-section( v-cloak v-bind:class="{ 'is-visible': hasActiveFilters }" )
    h2.landing--active-filter-header( v-html=`totalCountLabel` )
    .landing--active-filter-actions
      ul.landing--active-filter-list
        li.landing--active-filter( v-for="(value, key) in filters " v-if="isActiveFilter(key)" )
          span.landing--active-filter-label( v-html="getLabelFor(value)" )
          button.landing--active-filter-remove( v-on:click="removeFilter(key)" )
            i.landing--active-filter-icon.fa.fa-close
      button.landing--active-filter-remove-all( v-on:click="removeAllFilters()" )=settings.clearAllLabel
      
mixin people(settings)
  +peopleResults(undefined, 'results')

mixin peopleResults(label, modelName)
  section.landing--search-results-section( v-cloak v-if=`${modelName}.results && ${modelName}.results.length > 0` )
    if label
      h2.landing--results-header=label
    ul.landing--search-results
      li.landing--search-result( v-for=`result in ${modelName}.results` )
        .landing--search-result-content
          .landing--search-result-title
            a.landing--search-result-link(
              v-html="fullName(result)"
              v-bind:href="'/directory/' + result.slug" )
            p.landing--search-result-date( v-html="result.title" )
            +contactLinks(result)  
        .landing--search-result-image(
          v-bind:style="{ 'background-image': 'url(https://robohash.org/' + result.slug + ')' }"
        )
    .landing--load-more-button-section
      +loadMoreButton(
        `hasMore${modelName[0].toUpperCase()}${modelName.substring(1)}`,
        `loadMore('${modelName}', true)`
      )

mixin contactLinks(result)
  ul.landing--search-result-contact-links( v-if="result.email || (result.office && result.office.name) || result.phone" )
    //- Email
    li.landing--search-result-contact-link( v-if="result.email" )
      a( v-bind:href=`'mailto:' + result.email` )
        i.landing--search-result-contact-link-icon.fa.fa-envelope
        span.landing--search-result-contact-link-label( v-html="result.email" )
    //- Office
    li.landing--search-result-contact-link( v-if="result.office && result.office.name" )
      a( v-bind:href="result.office.websiteLink" )
        i.landing--search-result-contact-link-icon.fa.fa-map-marker
        span.landing--search-result-contact-link-label( v-html="result.office.name" )
    //- Phone
    li.landing--search-result-contact-link( v-if="result.phone" )
      a( v-bind:href="phoneLink(result)" )
        i.landing--search-result-contact-link-icon.fa.fa-mobile
        span.landing--search-result-contact-link-label( v-html="result.phone" )

mixin loadMoreButton(displayCondition, clickMethod)
  button.load-more--button(v-if=displayCondition v-on:click=clickMethod )
    i.load-more--icon.fa.fa-plus
    span.load-more--label='Load more'
